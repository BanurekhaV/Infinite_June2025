Anonymous function calls : can be called using a delegate

Types of Delegates :
  1. Function Delegate : is an inbuilt-type
                        - must return a value
                        - can have 0 - 16 input parameters
                        - does not allow ref and out parameters
                        - can be used with anonymous methods and lambda expressions

 2. Action Delegates : encapsulates a method that does not return any data type
                       -may not take parameters(non-generic) or can take a parameter(generic)
     
 3. Predicate Delegates : encapsulates methods that return a Boolean type
                         - used for filtering list of values
                         - takes one parameter 


Shapes {} - Less Derived Type
Rectangle : Shapes{} - More Derived Type

Shapes s = new Rectangle(); 
Covariance  : allowing an object, variable or parameter of more derived type to be assigned to a less derived type
           - is a concept in c# that helps in preserving assignment compatibility
           - is an implicit operation

Contravariance : is the reverse assignment of covariance compatibility
                 allowing an object of less derived type to be assigned to a more derived type
                - is applied more to parameters than objects and variables
          
Base Type : generally has common information  (less derived type but bigger object)
Sub Types : have common info + specific to sub type info (more derived type, but smaller object)


Threads : Threads are defined as the execution path of a program
          They are light weight process
          Each Thread defines a unique flow of control
          The Thread that executes first is the Main Thread (which is created automatically)
          The Main thread will create child threads to perform some simple tasks
          The CurrentThread property of the Thread class is used to access the thread

Important Properties of  a Thread :
       - CurrentThread
       - Is Alive
       - Name
       - ThreadState
       - IsThreadPoolThread
       - IsBackGround
       - MangedThreadID

Functionalities of a Thread :
      - Sleep
      - Abort
      - Suspend
      - Resume
      - Start

Life Cycle of a Thread 
   - Unstarted
   - Runnable
   - Running
   - Not Runnable
   - Dead


Thread Synchronization : is a mechanism where only one process/job by a thread is allowed to access critical resources at a time, and the rest of the threads will have to wait for their turn

Methods to manage Synchronization
  1. Blocking Methods
  2. Locking Constructs
  3. Signalling
  4. No Block Synchronizations


Thread Pool :  is a collection of threads that can be reused for tasks, by making use of the ThreadPool static class and method known as QueueUserWorkItem(waitcallback obj)
The above method allocates threads to process if available, else it will call back on availability.
Till such time the process will be put in a queue.


Sowmya
Syam
Satya Sai
Karthikeya
Vikram
Naveen
Taraka
Hema Chandra
Manoj
Yogesh
Harishankaran
Nithin
Nishitha



        