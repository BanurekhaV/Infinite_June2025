#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSQL_VS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InfiniteDB")]
	public partial class LS_VSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertemp(emp instance);
    partial void Updateemp(emp instance);
    partial void Deleteemp(emp instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public LS_VSDataContext() : 
				base(global::LinqToSQL_VS.Properties.Settings.Default.InfiniteDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LS_VSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LS_VSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LS_VSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LS_VSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<emp> emps
		{
			get
			{
				return this.GetTable<emp>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSal_byName")]
		public int GetSal_byName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> salary)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ename, salary);
			salary = ((System.Nullable<double>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emp")]
	public partial class emp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empno;
		
		private string _ename;
		
		private string _job;
		
		private System.Nullable<int> _mgr_id;
		
		private string _hire_date;
		
		private System.Nullable<int> _salary;
		
		private System.Nullable<int> _comm;
		
		private System.Nullable<int> _deptno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempnoChanging(int value);
    partial void OnempnoChanged();
    partial void OnenameChanging(string value);
    partial void OnenameChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void Onmgr_idChanging(System.Nullable<int> value);
    partial void Onmgr_idChanged();
    partial void Onhire_dateChanging(string value);
    partial void Onhire_dateChanged();
    partial void OnsalaryChanging(System.Nullable<int> value);
    partial void OnsalaryChanged();
    partial void OncommChanging(System.Nullable<int> value);
    partial void OncommChanged();
    partial void OndeptnoChanging(System.Nullable<int> value);
    partial void OndeptnoChanged();
    #endregion
		
		public emp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empno
		{
			get
			{
				return this._empno;
			}
			set
			{
				if ((this._empno != value))
				{
					this.OnempnoChanging(value);
					this.SendPropertyChanging();
					this._empno = value;
					this.SendPropertyChanged("empno");
					this.OnempnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ename", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ename
		{
			get
			{
				return this._ename;
			}
			set
			{
				if ((this._ename != value))
				{
					this.OnenameChanging(value);
					this.SendPropertyChanging();
					this._ename = value;
					this.SendPropertyChanged("ename");
					this.OnenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mgr_id", DbType="Int")]
		public System.Nullable<int> mgr_id
		{
			get
			{
				return this._mgr_id;
			}
			set
			{
				if ((this._mgr_id != value))
				{
					this.Onmgr_idChanging(value);
					this.SendPropertyChanging();
					this._mgr_id = value;
					this.SendPropertyChanged("mgr_id");
					this.Onmgr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hire_date", DbType="VarChar(30)")]
		public string hire_date
		{
			get
			{
				return this._hire_date;
			}
			set
			{
				if ((this._hire_date != value))
				{
					this.Onhire_dateChanging(value);
					this.SendPropertyChanging();
					this._hire_date = value;
					this.SendPropertyChanged("hire_date");
					this.Onhire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Int")]
		public System.Nullable<int> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comm", DbType="Int")]
		public System.Nullable<int> comm
		{
			get
			{
				return this._comm;
			}
			set
			{
				if ((this._comm != value))
				{
					this.OncommChanging(value);
					this.SendPropertyChanging();
					this._comm = value;
					this.SendPropertyChanged("comm");
					this.OncommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptno", DbType="Int")]
		public System.Nullable<int> deptno
		{
			get
			{
				return this._deptno;
			}
			set
			{
				if ((this._deptno != value))
				{
					this.OndeptnoChanging(value);
					this.SendPropertyChanging();
					this._deptno = value;
					this.SendPropertyChanged("deptno");
					this.OndeptnoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpId;
		
		private string _EmpName;
		
		private string _Gender;
		
		private System.Nullable<decimal> _Salary;
		
		private System.Nullable<int> _DepartmentId;
		
		private string _Phone;
		
		private System.Nullable<decimal> _AnnualSalary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdChanging(int value);
    partial void OnEmpIdChanged();
    partial void OnEmpNameChanging(string value);
    partial void OnEmpNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAnnualSalaryChanging(System.Nullable<decimal> value);
    partial void OnAnnualSalaryChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmpName
		{
			get
			{
				return this._EmpName;
			}
			set
			{
				if ((this._EmpName != value))
				{
					this.OnEmpNameChanging(value);
					this.SendPropertyChanging();
					this._EmpName = value;
					this.SendPropertyChanged("EmpName");
					this.OnEmpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(7)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(12)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualSalary", AutoSync=AutoSync.Always, DbType="Decimal(21,0)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AnnualSalary
		{
			get
			{
				return this._AnnualSalary;
			}
			set
			{
				if ((this._AnnualSalary != value))
				{
					this.OnAnnualSalaryChanging(value);
					this.SendPropertyChanging();
					this._AnnualSalary = value;
					this.SendPropertyChanged("AnnualSalary");
					this.OnAnnualSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
